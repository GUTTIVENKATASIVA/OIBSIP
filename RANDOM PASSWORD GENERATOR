import string
import random
def generate_password(length, use_letters, use_numbers, use_symbols):
    # Define a character pool, where we'll add letters, numbers, and/or symbols
    character_pool = ''
    
    if use_letters:
        character_pool += string.ascii_letters  # 'ascii_letters' includes 'lower case and upper case'
    
    if use_numbers:
        character_pool += string.digits  # 'digits' includes '0-9'

    if use_symbols:
        character_pool += string.punctuation  # 'punctuation' includes '!@#$%^&*()_+-=[]{}|;:",.<>?'

    # Ensure at least one type of character is selected
    if not character_pool:
        print("Error: No character sets selected. Please choose at least one type of character.")
        return None

    # Generate the password by randomly selecting 'length' characters from the character pool
    password = ''.join(random.choice(character_pool) for _ in range(length))
    
    return password

# Main function that asks the user for input and generates the password
def main():
    # Asking the user to enter the length of the password
    length = int(input("Enter password length: "))
    
    # Ensure the password length is positive
    if length <= 0:
        print("Error: Password length should be a positive integer.")
        return

    # Asking if the user wants to include letters
    use_letters = input("Include letters? (y/n): ").lower() == 'y'
    
    # Asking if the user wants to include numbers
    use_numbers = input("Include numbers? (y/n): ").lower() == 'y'
    
    # Asking if the user wants to include symbols
    use_symbols = input("Include symbols? (y/n): ").lower() == 'y'

    # Generating the password
    password = generate_password(length, use_letters, use_numbers, use_symbols)
    
    # printing the generated password based on user preference9
    
    if password:
        print(f"Generated password: {password}")

# This is the entry point of the script. It runs the main function when the script is executed.
if __name__ == "__main__":
    main()
